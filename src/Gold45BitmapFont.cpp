//---------------------------------------------------------------------------//
//!
//! \file   Gold45BitmapFont.cpp
//! \author Alex Robinson, Sean Robinson
//! \brief  The gold 45 bitmap font class definition
//!
//---------------------------------------------------------------------------//

// QtD1 Includes
#include "Gold45BitmapFont.h"

namespace QtD1 {

// Initialize static members
std::unique_ptr<Gold45BitmapFont> Gold45BitmapFont::s_instance;

// The character widths
const QVector<int> Gold45BitmapFont::s_widths = {
  /*ASCII Table Index : ASCII Table Value*/
  /*0:*/     0,
  /*1:*/     0,
  /*2:*/     0,
  /*3:*/     0,
  /*4:*/     0,
  /*5:*/     0,
  /*6:*/     0,
  /*7:*/     0,
  /*8:*/     0,
  /*9:*/     0,
  /*10:*/    0,
  /*11:*/    0,
  /*12:*/    0,
  /*13:*/    0,
  /*14:*/    0,
  /*15:*/    0,
  /*16:*/    0,
  /*17:*/    0,
  /*18:*/    0,
  /*19:*/    0,
  /*20:*/    0,
  /*21:*/    0,
  /*22:*/    0,
  /*23:*/    0,
  /*24:*/    0,
  /*25:*/    0,
  /*26:*/    0,
  /*27:*/    0,
  /*28:*/    0,
  /*29:*/    0,
  /*30:*/    0,
  /*31:*/    0,
  /*32: */  30,
  /*33:!*/  15,
  /*34:"*/  22,
  /*35:#*/  22,
  /*36:$*/   0,
  /*37:%*/  38,
  /*38:&*/  32,
  /*39:'*/  15,
  /*40:(*/  15,
  /*41:)*/  15,
  /*42:**/  18,
  /*43:+*/  18,
  /*44:,*/  15,
  /*45:-*/  18,
  /*46:.*/  15,
  /*47:/*/  23,
  /*48:0*/  35,
  /*49:1*/  15,
  /*50:2*/  26,
  /*51:3*/  23,
  /*52:4*/  23,
  /*53:5*/  23,
  /*54:6*/  23,
  /*55:7*/  21,
  /*56:8*/  21,
  /*57:9*/  21,
  /*58::*/  15,
  /*59:;*/  15,
  /*60:<*/   0,
  /*61:=*/  18,
  /*62:>*/   0,
  /*63:?*/  20,
  /*64:@*/   0,
  /*65:A*/  32,
  /*66:B*/  23,
  /*67:C*/  28,
  /*68:D*/  30,
  /*69:E*/  23,
  /*70:F*/  23,
  /*71:G*/  31,
  /*72:H*/  28,
  /*73:I*/  15,
  /*74:J*/  15,
  /*75:K*/  25,
  /*76:L*/  23,
  /*77:M*/  35,
  /*78:N*/  30,
  /*79:O*/  32,
  /*80:P*/  23,
  /*81:Q*/  33,
  /*82:R*/  30,
  /*83:S*/  23,
  /*84:T*/  30,
  /*85:U*/  35,
  /*86:V*/  35,
  /*87:W*/  46,
  /*88:X*/  35,
  /*89:Y*/  33,
  /*90:Z*/  25,
  /*91:[*/  15,
  /*92:\*/   0,
  /*93:]*/  15,
  /*94:^*/   0,
  /*95:_*/   0,
  /*96:`*/   0,
  /*97:a*/  32,
  /*98:b*/  23,
  /*99:c*/  28,
  /*100:d*/ 30,
  /*101:e*/ 23,
  /*102:f*/ 23,
  /*103:g*/ 31,
  /*104:h*/ 28,
  /*105:i*/ 15,
  /*106:j*/ 15,
  /*107:k*/ 25,
  /*108:l*/ 23,
  /*109:m*/ 35,
  /*110:n*/ 30,
  /*111:o*/ 32,
  /*112:p*/ 23,
  /*113:q*/ 33,
  /*114:r*/ 30,
  /*115:s*/ 23,
  /*116:t*/ 30,
  /*117:u*/ 35,
  /*118:v*/ 35,
  /*119:w*/ 46,
  /*120:x*/ 35,
  /*121:y*/ 33,
  /*122:z*/ 25,
  /*123:{*/ 15,
  /*124:|*/  0,
  /*125:}*/ 15,
  /*126:~*/  0,
  /*127:*/   0,
  /*128:*/   0,
  /*129:*/   0,
  /*130:*/   0,
  /*131:*/   0,
  /*132:*/   0,
  /*133:*/   0,
  /*134:*/   0,
  /*135:*/   0,
  /*136:*/   0,
  /*137:*/   0,
  /*138:*/   0,
  /*139:*/   0,
  /*140:*/   0,
  /*141:*/   0,
  /*142:*/   0,
  /*143:*/   0,
  /*144:*/   0,
  /*145:*/   0,
  /*146:*/   0,
  /*147:*/   0,
  /*148:*/   0,
  /*149:*/   0,
  /*150:*/   0,
  /*151:*/   0,
  /*152:*/   0,
  /*153:*/   0,
  /*154:*/   0,
  /*155:*/   0,
  /*156:*/   0,
  /*157:*/   0,
  /*158:*/   0,
  /*159:*/   0,
  /*160:*/   0,
  /*161:*/   0,
  /*162:*/   0,
  /*163:*/   0,
  /*164:*/   0,
  /*165:*/   0,
  /*166:*/   0,
  /*167:*/   0,
  /*168:*/   0,
  /*169:*/   0,
  /*170:*/   0,
  /*171:*/   0,
  /*172:*/   0,
  /*173:*/   0,
  /*174:*/   0,
  /*175:*/   0,
  /*176:*/   0,
  /*177:*/   0,
  /*178:*/   0,
  /*179:*/   0,
  /*180:*/   0,
  /*181:*/   0,
  /*182:*/   0,
  /*183:*/   0,
  /*184:*/   0,
  /*185:*/   0,
  /*186:*/   0,
  /*187:*/   0,
  /*188:*/   0,
  /*189:*/   0,
  /*190:*/   0,
  /*191:*/   0,
  /*192:*/   0,
  /*193:*/   0,
  /*194:*/   0,
  /*195:*/   0,
  /*196:*/   0,
  /*197:*/   0,
  /*198:*/   0,
  /*199:*/   0,
  /*200:*/   0,
  /*201:*/   0,
  /*202:*/   0,
  /*203:*/   0,
  /*204:*/   0,
  /*205:*/   0,
  /*206:*/   0,
  /*207:*/   0,
  /*208:*/   0,
  /*209:*/   0,
  /*210:*/   0,
  /*211:*/   0,
  /*212:*/   0,
  /*213:*/   0,
  /*214:*/   0,
  /*215:*/   0,
  /*216:*/   0,
  /*217:*/   0,
  /*218:*/   0,
  /*219:*/   0,
  /*220:*/   0,
  /*221:*/   0,
  /*222:*/   0,
  /*223:*/   0,
  /*224:*/   0,
  /*225:*/   0,
  /*226:*/   0,
  /*227:*/   0,
  /*228:*/   0,
  /*229:*/   0,
  /*230:*/   0,
  /*231:*/   0,
  /*232:*/   0,
  /*233:*/   0,
  /*234:*/   0,
  /*235:*/   0,
  /*236:*/   0,
  /*237:*/   0,
  /*238:*/   0,
  /*239:*/   0,
  /*240:*/   0,
  /*241:*/   0,
  /*242:*/   0,
  /*243:*/   0,
  /*244:*/   0,
  /*245:*/   0,
  /*246:*/   0,
  /*247:*/   0,
  /*248:*/   0,
  /*249:*/   0,
  /*250:*/   0,
  /*251:*/   0,
  /*252:*/   0,
  /*253:*/   0,
  /*254:*/   0,
  /*255:*/   0};

// The character widths
const QVector<int> Gold45BitmapFont::s_order = {
  /*ASCII Table Index : Frame Index*/
  /*0:*/    -1,
  /*1:*/    -1,
  /*2:*/    -1,
  /*3:*/    -1,
  /*4:*/    -1,
  /*5:*/    -1,
  /*6:*/    -1,
  /*7:*/    -1,
  /*8:*/    -1,
  /*9:*/    -1,
  /*10:*/   -1,
  /*11:*/   -1,
  /*12:*/   -1,
  /*13:*/   -1,
  /*14:*/   -1,
  /*15:*/   -1,
  /*16:*/   -1,
  /*17:*/   -1,
  /*18:*/   -1,
  /*19:*/   -1,
  /*20:*/   -1,
  /*21:*/   -1,
  /*22:*/   -1,
  /*23:*/   -1,
  /*24:*/   -1,
  /*25:*/   -1,
  /*26:*/   -1,
  /*27:*/   -1,
  /*28:*/   -1,
  /*29:*/   -1,
  /*30:*/   -1,
  /*31:*/   -1,
  /*32: */  -1,
  /*33:!*/  36,
  /*34:"*/  47,
  /*35:#*/  37,
  /*36:$*/  -1,
  /*37:%*/  38,
  /*38:&*/  39,
  /*39:'*/  46,
  /*40:(*/  41,
  /*41:)*/  42,
  /*42:**/  40,
  /*43:+*/  44,
  /*44:,*/  51,
  /*45:-*/  43,
  /*46:.*/  52,
  /*47:/*/  54,
  /*48:0*/  35,
  /*49:1*/  26,
  /*50:2*/  27,
  /*51:3*/  28,
  /*52:4*/  29,
  /*53:5*/  30,
  /*54:6*/  31,
  /*55:7*/  32,
  /*56:8*/  33,
  /*57:9*/  34,
  /*58::*/  50,
  /*59:;*/  49,
  /*60:<*/  -1,
  /*61:=*/  45,
  /*62:>*/  -1,
  /*63:?*/  53,
  /*64:@*/  -1,
  /*65:A*/   0,
  /*66:B*/   1,
  /*67:C*/   2,
  /*68:D*/   3,
  /*69:E*/   4,
  /*70:F*/   5,
  /*71:G*/   6,
  /*72:H*/   7,
  /*73:I*/   8,
  /*74:J*/   9,
  /*75:K*/  10,
  /*76:L*/  11,
  /*77:M*/  12,
  /*78:N*/  13,
  /*79:O*/  14,
  /*80:P*/  15,
  /*81:Q*/  16,
  /*82:R*/  17,
  /*83:S*/  18,
  /*84:T*/  19,
  /*85:U*/  20,
  /*86:V*/  21,
  /*87:W*/  22,
  /*88:X*/  23,
  /*89:Y*/  24,
  /*90:Z*/  25,
  /*91:[*/  41,
  /*92:\*/  -1,
  /*93:]*/  42,
  /*94:^*/  -1,
  /*95:_*/  -1,
  /*96:`*/  -1,
  /*97:a*/   0,
  /*98:b*/   1,
  /*99:c*/   2,
  /*100:d*/  3,
  /*101:e*/  4, 
  /*102:f*/  5,
  /*103:g*/  6,
  /*104:h*/  7,
  /*105:i*/  8,
  /*106:j*/  9,
  /*107:k*/ 10,
  /*108:l*/ 11,
  /*109:m*/ 12,
  /*110:n*/ 13,
  /*111:o*/ 14,
  /*112:p*/ 15,
  /*113:q*/ 16,
  /*114:r*/ 17,
  /*115:s*/ 18,
  /*116:t*/ 19,
  /*117:u*/ 20,
  /*118:v*/ 21,
  /*119:w*/ 22,
  /*120:x*/ 23,
  /*121:y*/ 24,
  /*122:z*/ 25,
  /*123:{*/ 41,
  /*124:|*/ -1,
  /*125:}*/ 42,
  /*126:~*/ -1,
  /*127:*/  -1,
  /*128:*/  -1,
  /*129:*/  -1,
  /*130:*/  -1,
  /*131:*/  -1,
  /*132:*/  -1,
  /*133:*/  -1,
  /*134:*/  -1,
  /*135:*/  -1,
  /*136:*/  -1,
  /*137:*/  -1,
  /*138:*/  -1,
  /*139:*/  -1,
  /*140:*/  -1,
  /*141:*/  -1,
  /*142:*/  -1,
  /*143:*/  -1,
  /*144:*/  -1,
  /*145:*/  -1,
  /*146:*/  -1,
  /*147:*/  -1,
  /*148:*/  -1,
  /*149:*/  -1,
  /*150:*/  -1,
  /*151:*/  -1,
  /*152:*/  -1,
  /*153:*/  -1,
  /*154:*/  -1,
  /*155:*/  -1,
  /*156:*/  -1,
  /*157:*/  -1,
  /*158:*/  -1,
  /*159:*/  -1,
  /*160:*/  -1,
  /*161:*/  -1,
  /*162:*/  -1,
  /*163:*/  -1,
  /*164:*/  -1,
  /*165:*/  -1,
  /*166:*/  -1,
  /*167:*/  -1,
  /*168:*/  -1,
  /*169:*/  -1,
  /*170:*/  -1,
  /*171:*/  -1,
  /*172:*/  -1,
  /*173:*/  -1,
  /*174:*/  -1,
  /*175:*/  -1,
  /*176:*/  -1,
  /*177:*/  -1,
  /*178:*/  -1,
  /*179:*/  -1,
  /*180:*/  -1,
  /*181:*/  -1,
  /*182:*/  -1,
  /*183:*/  -1,
  /*184:*/  -1,
  /*185:*/  -1,
  /*186:*/  -1,
  /*187:*/  -1,
  /*188:*/  -1,
  /*189:*/  -1,
  /*190:*/  -1,
  /*191:*/  -1,
  /*192:*/  -1,
  /*193:*/  -1,
  /*194:*/  -1,
  /*195:*/  -1,
  /*196:*/  -1,
  /*197:*/  -1,
  /*198:*/  -1,
  /*199:*/  -1,
  /*200:*/  -1,
  /*201:*/  -1,
  /*202:*/  -1,
  /*203:*/  -1,
  /*204:*/  -1,
  /*205:*/  -1,
  /*206:*/  -1,
  /*207:*/  -1,
  /*208:*/  -1,
  /*209:*/  -1,
  /*210:*/  -1,
  /*211:*/  -1,
  /*212:*/  -1,
  /*213:*/  -1,
  /*214:*/  -1,
  /*215:*/  -1,
  /*216:*/  -1,
  /*217:*/  -1,
  /*218:*/  -1,
  /*219:*/  -1,
  /*220:*/  -1,
  /*221:*/  -1,
  /*222:*/  -1,
  /*223:*/  -1,
  /*224:*/  -1,
  /*225:*/  -1,
  /*226:*/  -1,
  /*227:*/  -1,
  /*228:*/  -1,
  /*229:*/  -1,
  /*230:*/  -1,
  /*231:*/  -1,
  /*232:*/  -1,
  /*233:*/  -1,
  /*234:*/  -1,
  /*235:*/  -1,
  /*236:*/  -1,
  /*237:*/  -1,
  /*238:*/  -1,
  /*239:*/  -1,
  /*240:*/  -1,
  /*241:*/  -1,
  /*242:*/  -1,
  /*243:*/  -1,
  /*244:*/  -1,
  /*245:*/  -1,
  /*246:*/  -1,
  /*247:*/  -1,
  /*248:*/  -1,
  /*249:*/  -1,
  /*250:*/  -1,
  /*251:*/  -1,
  /*252:*/  -1,
  /*253:*/  -1,
  /*254:*/  -1,
  /*255:*/  -1};
  
// Constructor
Gold45BitmapFont::Gold45BitmapFont()
  : BitmapFont( this->getName(), s_widths, s_order )
{ /* ... */ }

// Get the Gold45BitmapFont instance
Gold45BitmapFont* Gold45BitmapFont::getInstance()
{
  // Just-in-time initialization
  if( !s_instance )
    s_instance.reset( new Gold45BitmapFont );

  return s_instance.get();
}

// Get the font name
QString Gold45BitmapFont::getName() const
{
  return "/data/bigtgold.cel+/levels/towndata/town.pal";
}

// Return the font size
int Gold45BitmapFont::getSize() const
{
  return 45;
}

} // end QtD1 namespace

//---------------------------------------------------------------------------//
// end Gold22BitmapFont.cpp
//---------------------------------------------------------------------------//
